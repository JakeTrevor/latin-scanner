export interface scanSettingsObject {
  meter: meter;
  elegaic: boolean;
  subscriptIgnoredText: boolean;
}

export interface scannedLineObject {
  status: scanStatus;
  statusMessage: string;
  meter: meter;
  line: string;
  output: outputObject[];

  //these items are generated by getter functions
  //and are mostly included in the interface to keep the code organised.
  flat: string[];
  solutions: string[];
  numberOfSolutions: number;
}

export interface outputObject {
  raw: string;
  full: string[];
  error: string;
}

export interface analysedLine {
  scans: [Record<number, quantity>, breakObject[]][];
  error: string;
}

export interface breakObject {
  preceedingVowel: number;
  succeedingVowel: number;
  line: string;
  position: number;
}

export interface regexMatch {
  index: number;
  value: string;
}

export type scanStatus = "Warning" | "OK" | "Plus";

export type scanNature = "Full Scan" | "Quantities" | "Input";

export type meter = "Hexameter" | "Pentameter";

export type quantityStrict = "Long" | "Short";
export type quantity = "Undefined" | quantityStrict;

export type footType =
  | 0 // represents a spondee
  | 1 // represents a dactyl
  | 2; // represents a half foor (1 long syllable)

export type vowel =
  | "a"
  | "e"
  | "i"
  | "o"
  | "u"
  | "y"
  | "A"
  | "E"
  | "I"
  | "O"
  | "U"
  | "Y";
